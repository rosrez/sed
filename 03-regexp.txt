@@
1. SED REGULAR EXPRESSIONS.

/abc/ matches abc


@@
2. ESCAPE CHARACTER \

/a\.c/ matches 'a.c'

/a\\c/ maches 'a\c'

/a\/c/ matches 'a/c'

NOTE1: We need an escape character to escape the + sign which denotes multiple characters:

$ sed 's/ \+/=/3'
word1    word2  word3      word4
word1    word2  word3=word4

Without the \, sed would be looking for a pattern ' +' with a literal + character.

NOTE2: We also need to escape parentheses if they denote capture groups in a
regular expression:

$ sed 's/\(\w\+\) \+\(\w\+\)/\2---\1/'
one two three four five six
two---one three four five six

Without the \, sed would look for a literal match with characters ():

$ sed 's/(\w\+)/<&>/g'
one two (three) four (five) six
one two <(three)> four <(five)> six


@@
3. BEGINNING/END OF LINE.

/^abc/ matches first 3 characters in the line 'abcd'

/abc$/ matches last 3 characters in a line.

@@
4. CHARACTER CLASSES - GROUPS OF CHARACTER REFERENCED IN SQUARE BRACKETS [].

/a[xyz]c/ matches 'axc'

/a[xyz]c/ does not match "axyzc"

/a[a-z]c/ matches "abc" or "aBc"

/a[a-zA-Z]c/ matches "abc"

/a[^a-z]c/ does not match "Abc"
   ^^^^
   NEGATION with ^: ANYTHING THAT IS NOT A LOWER-CASE LETTER

/ab*c/ matches "ac", "abc", "abbbbbbbbbbc"

@@
5. REPEATING MULTIPLE ITEMS

/ab*c/  matches "abbbbbbc". The asterisk here refers to the 'b' character in the pattern.

/(ab)*c/ matches "ababababababc"
                  ^^
                  PART OF PATTERN REPEATS

In other words, the asterisk refers to the sequence of characters in parentheses, 'ab'.

@@
6. GREEDINESS - USING THE ASTERISK

/<.*>/ matches all of "<i>italic text</i>"

/<[^>]*^> matches the "italic text" only.

@@
6. AMPERSAND & - REFERS TO A MATCH IN A REPLACEMENT STRING

We can refer to the match we've just found and are about to replace with an ampersand. For example, here we put every capitalized word in a text in parentheses:

$ sed 's/[A-Z][a-z]*/(&)/g' dukeofyork.txt 
                      ^--- OUR MATCH, WE SURROUND IT WITH PARENTHESES HERE

(The) grand old (Duke) of (York)
(He) had ten thousand men
(He) marched them up to the top of the hill
(And) he marched them down again
(And) when they were up they were up
(And) when they were down they were down
(And) when they were only half-way up
(They) were neither up nor down

@@
6. BACKSLASH-NUMBER - REFERS TO AN INDIVIDUAL SUBSTRING IN A MATCH

sed 's/\([A-Za-z]*\) *\(up\)/<\1> <\2>/g' dukeofyork.txt 
       ^^---------^^  ^^--^^  ^^   ^^
            |           |     |     |
            \-----------/     \-----/
                  |              |
             CAPTURE GROUPS    REFERENCED IN THE REPLACEMENT STRING AS \1 and \2

Capture groups are marked with parentheses in the search pattern, and parentheses must be escaped, hence the \(pattern\) syntax.

THE RESULT:

The grand old Duke of York
He had ten thousand men
He marched <them> <up> to the top of the hill
And he marched them down again
And when they <were> <up> they <were> <up>
And when they were down they were down
And when they were only half-<way> <up>
They were <neither> <up> nor down


